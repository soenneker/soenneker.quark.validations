@using Soenneker.Quark.Validations.Demo.Components

<div class="simple-validation-demo">
    <h3>Super Simple Validation</h3>
    <p>Just use the validators directly - no complex setup needed!</p>
    
    <div class="form-group">
        <label>Email:</label>
        <Validation @ref="_emailValidation" Validator="@SimpleValidators.IsEmail">
            <ValidationInput @bind-Value="_email" />
        </Validation>
        <ValidationError Validation="_emailValidation" />
    </div>

    <div class="form-group">
        <label>Username (3-20 chars):</label>
        <Validation @ref="_usernameValidation" Validator="@SimpleValidators.MinLength(3, "Must be at least 3 characters")">
            <ValidationInput @bind-Value="_username" />
        </Validation>
        <ValidationError Validation="_usernameValidation" />
    </div>

    <div class="form-group">
        <label>Age (18+):</label>
        <Validation @ref="_ageValidation" Validator="@SimpleValidators.MinValue(18, "Must be 18 or older")">
            <ValidationInput @bind-Value="_age" />
        </Validation>
        <ValidationError Validation="_ageValidation" />
    </div>

    <div class="form-group">
        <label>Website (optional):</label>
        <Validation @ref="_websiteValidation" Validator="@SimpleValidators.IsUrl">
            <ValidationInput @bind-Value="_website" />
        </Validation>
        <ValidationError Validation="_websiteValidation" />
    </div>

    <button @onclick="ValidateAll" disabled="@(!IsValid)">
        Submit
    </button>
</div>

@code {
    private string _email = "";
    private string _username = "";
    private string _age = "";
    private string _website = "";
    
    private Validation? _emailValidation;
    private Validation? _usernameValidation;
    private Validation? _ageValidation;
    private Validation? _websiteValidation;

    private bool IsValid => 
        _emailValidation?.Status == ValidationStatus.Success &&
        _usernameValidation?.Status == ValidationStatus.Success &&
        _ageValidation?.Status == ValidationStatus.Success &&
        (_websiteValidation?.Status == ValidationStatus.Success || _websiteValidation?.Status == ValidationStatus.None);

    private void ValidateAll()
    {
        _emailValidation?.Validate();
        _usernameValidation?.Validate();
        _ageValidation?.Validate();
        _websiteValidation?.Validate();
    }
}

<style>
    .simple-validation-demo {
        max-width: 500px;
        margin: 20px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background: #f8f9fa;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    button {
        background: #007bff;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    button:disabled {
        background: #6c757d;
        cursor: not-allowed;
    }
</style>
